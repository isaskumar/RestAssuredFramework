<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="5" ignored="0" total="24" passed="19">
  <reporter-output>
  </reporter-output>
  <suite name="RestAssuredTestSuite" duration-ms="21627" started-at="2020-06-05T08:00:46Z" finished-at="2020-06-05T08:01:08Z">
    <groups>
    </groups>
    <test name="RestTest" duration-ms="21627" started-at="2020-06-05T08:00:46Z" finished-at="2020-06-05T08:01:08Z">
      <class name="com.api.qa.test.TC004_PUT_Update_Employee">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.api.qa.test.TC004_PUT_Update_Employee@402a079c]" name="setup" is-config="true" duration-ms="1" started-at="2020-06-05T08:01:03Z" finished-at="2020-06-05T08:01:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="createEmployee()[pri:0, instance:com.api.qa.test.TC004_PUT_Update_Employee@402a079c]" name="createEmployee" is-config="true" duration-ms="4951" started-at="2020-06-05T08:01:03Z" finished-at="2020-06-05T08:01:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createEmployee -->
        <test-method status="PASS" signature="validateContentType()[pri:0, instance:com.api.qa.test.TC004_PUT_Update_Employee@402a079c]" name="validateContentType" duration-ms="1" started-at="2020-06-05T08:01:08Z" finished-at="2020-06-05T08:01:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateContentType -->
        <test-method status="FAIL" signature="validateResponseBody()[pri:0, instance:com.api.qa.test.TC004_PUT_Update_Employee@402a079c]" name="validateResponseBody" duration-ms="1" started-at="2020-06-05T08:01:08Z" finished-at="2020-06-05T08:01:08Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:568)
at org.testng.Assert.assertEquals(Assert.java:578)
at com.api.qa.test.TC004_PUT_Update_Employee.validateResponseBody(TC004_PUT_Update_Employee.java:52)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateResponseBody -->
        <test-method status="PASS" signature="validateResponseTime()[pri:0, instance:com.api.qa.test.TC004_PUT_Update_Employee@402a079c]" name="validateResponseTime" duration-ms="1" started-at="2020-06-05T08:01:08Z" finished-at="2020-06-05T08:01:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateResponseTime -->
        <test-method status="PASS" signature="validateStatusCode()[pri:0, instance:com.api.qa.test.TC004_PUT_Update_Employee@402a079c]" name="validateStatusCode" duration-ms="0" started-at="2020-06-05T08:01:08Z" finished-at="2020-06-05T08:01:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateStatusCode -->
        <test-method status="PASS" signature="validateStatusLine()[pri:0, instance:com.api.qa.test.TC004_PUT_Update_Employee@402a079c]" name="validateStatusLine" duration-ms="1" started-at="2020-06-05T08:01:08Z" finished-at="2020-06-05T08:01:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateStatusLine -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.api.qa.test.TC004_PUT_Update_Employee@402a079c]" name="tearDown" is-config="true" duration-ms="0" started-at="2020-06-05T08:01:08Z" finished-at="2020-06-05T08:01:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.api.qa.test.TC004_PUT_Update_Employee -->
      <class name="com.api.qa.test.TC001_Get_All_Employees">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.api.qa.test.TC001_Get_All_Employees@6500df86]" name="setup" is-config="true" duration-ms="1" started-at="2020-06-05T08:01:02Z" finished-at="2020-06-05T08:01:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="getAllEmployees()[pri:0, instance:com.api.qa.test.TC001_Get_All_Employees@6500df86]" name="getAllEmployees" is-config="true" duration-ms="795" started-at="2020-06-05T08:01:02Z" finished-at="2020-06-05T08:01:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllEmployees -->
        <test-method status="PASS" signature="validateContentType()[pri:0, instance:com.api.qa.test.TC001_Get_All_Employees@6500df86]" name="validateContentType" duration-ms="1" started-at="2020-06-05T08:01:03Z" finished-at="2020-06-05T08:01:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateContentType -->
        <test-method status="PASS" signature="validateResponseBody()[pri:0, instance:com.api.qa.test.TC001_Get_All_Employees@6500df86]" name="validateResponseBody" duration-ms="0" started-at="2020-06-05T08:01:03Z" finished-at="2020-06-05T08:01:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateResponseBody -->
        <test-method status="PASS" signature="validateResponseTime()[pri:0, instance:com.api.qa.test.TC001_Get_All_Employees@6500df86]" name="validateResponseTime" duration-ms="1" started-at="2020-06-05T08:01:03Z" finished-at="2020-06-05T08:01:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateResponseTime -->
        <test-method status="PASS" signature="validateStatusCode()[pri:0, instance:com.api.qa.test.TC001_Get_All_Employees@6500df86]" name="validateStatusCode" duration-ms="1" started-at="2020-06-05T08:01:03Z" finished-at="2020-06-05T08:01:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateStatusCode -->
        <test-method status="PASS" signature="validateStatusLine()[pri:0, instance:com.api.qa.test.TC001_Get_All_Employees@6500df86]" name="validateStatusLine" duration-ms="1" started-at="2020-06-05T08:01:03Z" finished-at="2020-06-05T08:01:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateStatusLine -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.api.qa.test.TC001_Get_All_Employees@6500df86]" name="tearDown" is-config="true" duration-ms="0" started-at="2020-06-05T08:01:03Z" finished-at="2020-06-05T08:01:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.api.qa.test.TC001_Get_All_Employees -->
      <class name="com.api.qa.test.TC003_POST_Create_Employee">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.api.qa.test.TC003_POST_Create_Employee@42dafa95]" name="setup" is-config="true" duration-ms="1" started-at="2020-06-05T08:00:57Z" finished-at="2020-06-05T08:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="createEmployee()[pri:0, instance:com.api.qa.test.TC003_POST_Create_Employee@42dafa95]" name="createEmployee" is-config="true" duration-ms="4770" started-at="2020-06-05T08:00:57Z" finished-at="2020-06-05T08:01:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createEmployee -->
        <test-method status="PASS" signature="validateContentType()[pri:0, instance:com.api.qa.test.TC003_POST_Create_Employee@42dafa95]" name="validateContentType" duration-ms="1" started-at="2020-06-05T08:01:02Z" finished-at="2020-06-05T08:01:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateContentType -->
        <test-method status="PASS" signature="validateResponseBody()[pri:0, instance:com.api.qa.test.TC003_POST_Create_Employee@42dafa95]" name="validateResponseBody" duration-ms="2" started-at="2020-06-05T08:01:02Z" finished-at="2020-06-05T08:01:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateResponseBody -->
        <test-method status="PASS" signature="validateResponseTime()[pri:0, instance:com.api.qa.test.TC003_POST_Create_Employee@42dafa95]" name="validateResponseTime" duration-ms="2" started-at="2020-06-05T08:01:02Z" finished-at="2020-06-05T08:01:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateResponseTime -->
        <test-method status="PASS" signature="validateStatusCode()[pri:0, instance:com.api.qa.test.TC003_POST_Create_Employee@42dafa95]" name="validateStatusCode" duration-ms="2" started-at="2020-06-05T08:01:02Z" finished-at="2020-06-05T08:01:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateStatusCode -->
        <test-method status="PASS" signature="validateStatusLine()[pri:0, instance:com.api.qa.test.TC003_POST_Create_Employee@42dafa95]" name="validateStatusLine" duration-ms="1" started-at="2020-06-05T08:01:02Z" finished-at="2020-06-05T08:01:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateStatusLine -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.api.qa.test.TC003_POST_Create_Employee@42dafa95]" name="tearDown" is-config="true" duration-ms="0" started-at="2020-06-05T08:01:02Z" finished-at="2020-06-05T08:01:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.api.qa.test.TC003_POST_Create_Employee -->
      <class name="com.api.qa.test.TC002_GET_Single_Employee">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.api.qa.test.TC002_GET_Single_Employee@271053e1]" name="setup" is-config="true" duration-ms="38" started-at="2020-06-05T08:00:46Z" finished-at="2020-06-05T08:00:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="getAllEmployees()[pri:0, instance:com.api.qa.test.TC002_GET_Single_Employee@271053e1]" name="getAllEmployees" is-config="true" duration-ms="8216" started-at="2020-06-05T08:00:46Z" finished-at="2020-06-05T08:00:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllEmployees -->
        <test-method status="PASS" signature="validateContentType()[pri:0, instance:com.api.qa.test.TC002_GET_Single_Employee@271053e1]" name="validateContentType" duration-ms="8" started-at="2020-06-05T08:00:55Z" finished-at="2020-06-05T08:00:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateContentType -->
        <test-method status="FAIL" signature="validateResponseBody()[pri:0, instance:com.api.qa.test.TC002_GET_Single_Employee@271053e1]" name="validateResponseBody" duration-ms="1" started-at="2020-06-05T08:00:55Z" finished-at="2020-06-05T08:00:55Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:568)
at org.testng.Assert.assertEquals(Assert.java:578)
at com.api.qa.test.TC002_GET_Single_Employee.validateResponseBody(TC002_GET_Single_Employee.java:35)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateResponseBody -->
        <test-method status="PASS" signature="validateResponseTime()[pri:0, instance:com.api.qa.test.TC002_GET_Single_Employee@271053e1]" name="validateResponseTime" duration-ms="1" started-at="2020-06-05T08:00:55Z" finished-at="2020-06-05T08:00:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateResponseTime -->
        <test-method status="FAIL" signature="validateStatusCode()[pri:0, instance:com.api.qa.test.TC002_GET_Single_Employee@271053e1]" name="validateStatusCode" duration-ms="1" started-at="2020-06-05T08:00:55Z" finished-at="2020-06-05T08:00:55Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [200] but found [400]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [200] but found [400]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:652)
at org.testng.Assert.assertEquals(Assert.java:662)
at com.api.qa.test.TC002_GET_Single_Employee.validateStatusCode(TC002_GET_Single_Employee.java:43)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateStatusCode -->
        <test-method status="FAIL" signature="validateStatusLine()[pri:0, instance:com.api.qa.test.TC002_GET_Single_Employee@271053e1]" name="validateStatusLine" duration-ms="1" started-at="2020-06-05T08:00:55Z" finished-at="2020-06-05T08:00:55Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [HTTP/1.1 200 OK] but found [HTTP/1.1 400 Bad Request]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [HTTP/1.1 200 OK] but found [HTTP/1.1 400 Bad Request]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at com.api.qa.test.TC002_GET_Single_Employee.validateStatusLine(TC002_GET_Single_Employee.java:63)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateStatusLine -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.api.qa.test.TC002_GET_Single_Employee@271053e1]" name="tearDown" is-config="true" duration-ms="0" started-at="2020-06-05T08:00:55Z" finished-at="2020-06-05T08:00:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.api.qa.test.TC002_GET_Single_Employee -->
      <class name="com.api.qa.test.TC005_Delete_Employee">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.api.qa.test.TC005_Delete_Employee@589838eb]" name="setup" is-config="true" duration-ms="1" started-at="2020-06-05T08:00:55Z" finished-at="2020-06-05T08:00:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="deleteEmployee()[pri:0, instance:com.api.qa.test.TC005_Delete_Employee@589838eb]" name="deleteEmployee" is-config="true" duration-ms="2489" started-at="2020-06-05T08:00:55Z" finished-at="2020-06-05T08:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteEmployee -->
        <test-method status="PASS" signature="validateContentType()[pri:0, instance:com.api.qa.test.TC005_Delete_Employee@589838eb]" name="validateContentType" duration-ms="0" started-at="2020-06-05T08:00:57Z" finished-at="2020-06-05T08:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateContentType -->
        <test-method status="FAIL" signature="validateResponseBody()[pri:0, instance:com.api.qa.test.TC005_Delete_Employee@589838eb]" name="validateResponseBody" duration-ms="1" started-at="2020-06-05T08:00:57Z" finished-at="2020-06-05T08:00:57Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:568)
at org.testng.Assert.assertEquals(Assert.java:578)
at com.api.qa.test.TC005_Delete_Employee.validateResponseBody(TC005_Delete_Employee.java:42)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateResponseBody -->
        <test-method status="PASS" signature="validateStatusCode()[pri:0, instance:com.api.qa.test.TC005_Delete_Employee@589838eb]" name="validateStatusCode" duration-ms="1" started-at="2020-06-05T08:00:57Z" finished-at="2020-06-05T08:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateStatusCode -->
        <test-method status="PASS" signature="validateStatusLine()[pri:0, instance:com.api.qa.test.TC005_Delete_Employee@589838eb]" name="validateStatusLine" duration-ms="1" started-at="2020-06-05T08:00:57Z" finished-at="2020-06-05T08:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateStatusLine -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.api.qa.test.TC005_Delete_Employee@589838eb]" name="tearDown" is-config="true" duration-ms="0" started-at="2020-06-05T08:00:57Z" finished-at="2020-06-05T08:00:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.api.qa.test.TC005_Delete_Employee -->
    </test> <!-- RestTest -->
  </suite> <!-- RestAssuredTestSuite -->
</testng-results>
